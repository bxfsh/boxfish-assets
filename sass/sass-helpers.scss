// NOTE this file is for sass variables and mixins ONLY. (not classes)
//
// This file is intended to be imported in all other stylesheets so adding
// classes here will lead to duplication of css.

@import "colors";

@mixin light-shadow {
  @include box-shadow(0 1px 8px 0 rgba($light-grey, 0.2));
}

@mixin position-fixed {
  position: fixed;
  @include backface-visibility(hidden);
}

$xs-device: 767px;
$sm-device: 768px;
$md-device: 992px;
$lg-device: 1200px;

@mixin xs-device {
  @media (max-width: $xs-device) { @content; }
}

@mixin sm-device {
  @media (min-width: $sm-device) and (max-width: $md-device) { @content; }
}

@mixin md-device {
  @media (min-width: $md-device) and (max-width: $lg-device) { @content; }
}

@mixin lg-device {
  @media (min-width: $lg-device) { @content; }
}

@mixin devices($xs: false, $sm: false, $md: false, $lg: false) {
  @if $xs == true { @include xs-device { @content; }}
  @if $sm == true { @include sm-device { @content; }}
  @if $md == true { @include md-device { @content; }}
  @if $lg == true { @include lg-device { @content; }}
}

@mixin position($position: relative, $top: 0, $right: 0, $bottom: 0, $left: 0) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin input {
  background: white;
  border: 1px solid $border-grey;
  border-radius: 3px;
  font-size: 1em;
  color: $dark-grey;
  padding: 0.5em;
  width: 100%;
  outline: none;
}

// CREATE BUTTON MIXIN
@mixin create-button($name, $bgcolor, $textcolor: white, $border: none) {
  .btn, .btn-sm {
    &.btn-#{$name} {
      background: $bgcolor;
      color: $textcolor;
      border: $border;

      &:hover {
        background: lighten($bgcolor, 5%);
      }
    }
  }
}

@mixin create-ghost-button($name, $background, $textcolor: darken($light-grey, 2%), $border-color: darken($lighter-grey, 5%)) {

  .btn, .btn-sm {
    &.btn-ghost-#{$name} {
      background: transparent;
      border-radius: 4px;
      font-weight: 600;
      color: $textcolor;
      border: 1px solid $border-color;

      & > i {
        padding: 0;
        line-height: inherit!important;
        background: transparent!important;
        font-size: inherit!important;
        width: inherit!important;
        height: inherit!important;

        &:hover {
          background: transparent;
          color: white!important;
        }
      }

      &:hover {
        background: $background;
        border-color: $background;
        color: white;

        i {
          color: white;
        }
      }
    }
  }
}


$xs-device: 767px;
$sm-device: 768px;
$md-device: 992px;
$lg-device: 1200px;

@mixin xs-device {
  @media (max-width: $xs-device) { @content; }
}

@mixin sm-device {
  @media (min-width: $sm-device) and (max-width: $md-device) { @content; }
}

@mixin md-device {
  @media (min-width: $md-device) and (max-width: $lg-device) { @content; }
}

@mixin lg-device {
  @media (min-width: $lg-device) { @content; }
}

$border: 1px solid $border-grey;


%flex {
  display: flex;
}

%flex-grow {
  flex-grow: 1;
}

%flex-wrap {
  flex-wrap: wrap;
}

%flex-direction-column {
  flex-direction: column;
}

%flex-direction-row {
  flex-direction: row;
}

%flex-span-1 {
  flex: 1;
}


@mixin gradient($color) {
  background: linear-gradient(left, darken($color, 2%), darken($color, 8%));
  transition: background 0.25s ease;
  color: white;

  &:hover {
    background: linear-gradient(left, darken($color, 8%), darken($color, 8%));
  }
}

%text-overflow {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
